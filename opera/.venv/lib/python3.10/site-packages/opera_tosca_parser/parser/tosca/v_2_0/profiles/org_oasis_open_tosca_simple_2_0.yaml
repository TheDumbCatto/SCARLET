# Copied from: https://github.com/oasis-open/tosca-community-contributions.

tosca_definitions_version: tosca_2_0

profile: org.oasis-open.simple-tosca:2.0

metadata:
  template_name: "profile.yaml"
  template_author: "OASIS Open"
  template_version: "2.0"

description: TOSCA Simple Profile type definitions

data_types:
  json:
    description: >-
      The json type defines strings that contain data in the
      JavaScript Object Notation (JSON) format.
    derived_from: string
  #
  # https://stackoverflow.com/questions/2583472/regex-to-validate-json
  #    constraints:
  #      - pattern: "/\
  #                  (?(DEFINE)\
  #                  (?<number>   -? (?= [1-9]|0(?!\\d) ) \\d+ (\\.\\d+)? ([eE] [+-]? \\d+)? )\
  #                  (?<boolean>   true | false | null )\
  #                  (?<string>    \" ([^\"\\\\\\\\]* | \\\\\\\\ [\"\\\\\\\\bfnrt\\/] | \\\\\\\\ u [0-9a-f]{4} )* \" )\
  #                  (?<array>     \\[  (?:  (?&json)  (?: , (?&json)  )*  )?  \\s* \\] )\
  #                  (?<pair>      \\s* (?&string) \\s* : (?&json)  )\
  #                  (?<object>    \\{  (?:  (?&pair)  (?: , (?&pair)  )*  )?  \\s* \\} )\
  #                  (?<json>   \\s* (?: (?&number) | (?&boolean) | (?&string) | (?&array) | (?&object) ) \\s* )\
  #                  )\
  #                  \\A (?&json) \\Z\
  #                  /six"

  xml:
    description: >-
      The xml type defines strings that contain data in the Extensible
      Markup Language (XML) format.
    derived_from: string

  Credential:
    description: >-
      The Credential type describes authorization credentials used to
      access network-accessible resources.
    properties:
      protocol:
        description: >-
          The optional protocol name.
        type: string
        required: false
      token_type:
        description: >-
          The required token type.
        type: string
        default: password
      token:
        description: >-
          The required token used as a credential for authorization or
          access to a networked resource.
        type: string
      keys:
        description: >-
          The optional list of protocol-specific keys or assertions.
        type: map
        required: false
        entry_schema:
          type: string
      user:
        description: >-
          The optional user (name or ID) used for non-token-based
          credentials.
        type: string
        required: false

  TimeInterval:
    properties:
      start_time:
        type: timestamp
        required: true
      end_time:
        type: timestamp
        required: true

  NetworkInfo:
    description: >-
      The Network type describes logical network information.
    properties:
      network_name:
        description: >-
          The name of the logical network (e.g., “public”, “private”,
          “admin”. etc.).
        type: string
      network_id:
        description: >-
          The unique ID of the network generated by the network provider.
        type: string
      addresses:
        description: >-
          The list of IP addresses assigned from the underlying network.
        type: list
        entry_schema:
          type: string

  PortInfo:
    description: >-
      The PortInfo type describes network port information.
    properties:
      port_name:
        description: >-
          The logical network port name.
        type: string
      port_id:
        description: >-
          The unique ID for the network port generated by the network provider.
        type: string
      network_id:
        description: >-
          The unique ID for the network.
        type: string
      mac_address:
        description: >-
          The unique media access control (MAC) address assigned to the port.
        type: string
      addresses:
        description: >-
          The list of IP addresses assigned to the port.
        type: list
        entry_schema:
          type: string

  PortDef:
    description: >-
      The PortDef type defines a network port.
    derived_from: integer
    constraints:
      - in_range: [ 1, 65535 ]

  PortSpec:
    description: >-
      The PortSpec type is used when describing port specifications
      for a network connection.
    properties:
      protocol:
        description: >-
          The required protocol used on the port.
        type: string
        required: true
        default: tcp
        constraints:
          - valid_values: [ udp, tcp, igmp ]
      target:
        description: >-
          The optional target port.
        type: PortDef
        required: false
      target_range:
        description: >-
          The optional range for target port.
        type: range
        required: false
        constraints:
          - in_range: [ 1, 65535 ]
      source:
        description: >-
          The optional source port.
        type: PortDef
        required: false
      source_range:
        description: >-
          The optional range for source port.
        type: range
        required: false
        constraints:
          - in_range: [ 1, 65535 ]

artifact_types:
  Root:
    description: >
      The TOSCA base artifact type from which all other normative
      TOSCA artifact types derive.

  File:
    description: >-
      The File artifact type is used when an artifact definition needs
      to have its associated file simply treated as a file without any
      special handling.
    derived_from: Root

  Deployment:
    description: >-
      The Deployment artifact type represents a binary packaging of an
      application or service that is used to install/create or deploy
      it as part of a node’s lifecycle.
    derived_from: Root

  Deployment.Image:
    description: >-
      The Deployment.Image artifact type represents any “image” that
      is an opaque packaging of a TOSCA Node whose contents are
      already installed and pre-configured (i.e., “stateful”) and
      prepared to be run on a known target container.
    derived_from: Deployment

  Deployment.Image.VM:
    description: >-
      The VM artifact type represents all Virtual Machine (VM) image
      and container formatted deployment artifacts.
    derived_from: Deployment.Image

  Implementation:
    description: >-
      The Implementation artifact type represents artifacts that are
      used to implement operations of TOSCA interfaces either directly
      (e.g., scripts) or indirectly (e.g., config. files).
    derived_from: Root

  Implementation.Bash:
    description: >
      Script artifact for the Unix Bash shell.
    derived_from: Implementation
    mime_type: application/x-sh
    file_ext: [ sh ]

  Implementation.Python:
    description: >
      Artifact for the interpreted Python language.
    derived_from: Implementation
    mime_type: application/x-python
    file_ext: [ py ]

capability_types:
  Node:
    description: >-
      The Node capability indicates the base capabilities of a TOSCA
      Node Type.

  Container:
    description: >-
      The Container capability, when included on a Node Type or
      Template definition, indicates that the node can act as a
      container for (or a host for) one or more other declared Node
      Types.

  Compute:
    description: >-
      The Compute capability, when included on a Node Type or Template
      definition, indicates that the node can provide hosting on a
      named compute resource.
    derived_from: Container
    properties:
      num_cpus:
        description: >-
          Number of (actual or virtual) CPUs associated with the
          Compute node.
        type: integer
        required: false
        constraints:
          - greater_or_equal: 1
      cpu_frequency:
        description: >-
          Specifies the operating frequency of CPU's core.  This
          property expresses the expected frequency of one (1) CPU as
          provided by the property “num_cpus”.
        type: scalar-unit.frequency
        required: false
        constraints:
          - greater_or_equal: '0.1 GHz'
      disk_size:
        description: >-
          Size of the local disk available to applications running on
          the Compute node.
        type: scalar-unit.size
        required: false
        constraints:
          - greater_or_equal: 0 MB
      mem_size:
        description: >-
          Size of memory available to applications running on the
          Compute node.
        type: scalar-unit.size
        required: false
        constraints:
          - greater_or_equal: 0 MB

  Endpoint:
    description: >-
      The Endpoint capability is the default TOSCA type for defining a
      network endpoint capability.
    properties:
      protocol:
        description: >-
          The name of the (Layer 4 through 7) protocol that the endpoint accepts.
        type: string
        default: tcp
      port:
        description: >-
          The optional port of the endpoint.
        type: PortDef
        required: false
      secure:
        description: >-
          If set, the endpoint accepts only secure connections (using
          credentials supplied on the ConnectsTo relationship).
        type: boolean
        required: false
        default: false
      url_path:
        description: >-
          The optional URL path of the endpoint’s address if
          applicable for the protocol.
        type: string
        required: false
      port_name:
        description: >-
          The optional name (or ID) of the network port to which this
          endpoint should be bound.
        type: string
        required: false
      network_name:
        description: >-
          The optional name (or ID) of the network to which this
          endpoint should be bound.
        type: string
        required: false
        default: PRIVATE
      initiator:
        description: >-
          The optional indicator of the direction of the connection.
        type: string
        default: source
        constraints:
          - valid_values: [ source, target, peer ]
      ports:
        description: >-
          The optional map of ports the Endpoint supports (if more than one).
        type: map
        required: false
        constraints:
          - min_length: 1
        entry_schema:
          type: PortSpec
    attributes:
      ip_address:
        description: >-
          The Endpoint's IP address as propagated up by the associated
          node’s host (Compute) container.
        type: string

  Endpoint.Public:
    description: >-
      The Endpoint.Public capability represents a public endpoint that
      is accessible from the general internet (and its public IP
      address ranges).
    derived_from: Endpoint
    properties:
      # Change network_name to use the default public network for the node
      # this capability will be declared in.
      network_name:
        type: string
        required: false
        default: PUBLIC
      floating:
        description: >
          Indicates that the public address should be allocated from
          the pool of floating IPs that are associated with the PUBLIC
          network.
        type: boolean
        default: false
        status: experimental
      dns_name:
        description: The optional name to register with DNS.
        type: string
        required: false
        status: experimental

  Endpoint.Admin:
    description: >-
      The Endpoint.Admin capability is the default TOSCA type for
      defining a specialized administrator endpoint capability.
    derived_from: Endpoint
    # Change Endpoint secure indicator to true from its default of false
    properties:
      secure:
        type: boolean
        default: true
        constraints:
          - equal: true

  Endpoint.Database:
    description: >-
      The Endpoint.Admin capability is the default TOSCA type for
      defining a specialized database endpoint capability.
    derived_from: Endpoint

  Attachment:
    description: >-
      The Attachment capability is the default TOSCA type for defining
      an attachment capability of a (logical) infrastructure device
      node (e.g., BlockStorage node).

  OperatingSystem:
    description: >-
      The OperatingSystem capability is the default TOSCA type for
      expressing an Operating System capability for a node.
    properties:
      architecture:
        description: >-
          The Operating System (OS) architecture. Examples of valid
          values include: x86_32, x86_64, etc.
        type: string
        required: false
      type:
        description: >-
          The Operating System (OS) type. Examples of valid values
          include: linux, aix, mac, windows, etc.
        type: string
        required: false
      distribution:
        description: >-
          The Operating System (OS) distribution. Examples of valid
          values for an “type” of “Linux” would include: debian,
          fedora, rhel and ubuntu.
        type: string
        required: false
      version:
        description: >-
          The Operating System version.
        type: version
        required: false

  Scalable:
    description: >-
      The OperatingSystem capability is the default TOSCA type for
      expressing a scalability capability for a node.
    properties:
      min_instances:
        description: >-
          The minimum number of instances that should be created for
          the associated TOSCA Node Template by a TOSCA orchestrator.
        type: integer
        default: 1
      max_instances:
        description: >-
          The maximum number of instances that should be created for
          the associated TOSCA Node Template by a TOSCA orchestrator.
        type: integer
        default: 1
      default_instances:
        description: >-
          The default number of instances a TOSCA orchestrator should
          attempt to allocate.
        type: integer
        required: false

  Network:
    description: >-
      The Network capability, when included on a Node Type or Template
      definition, indicates that the node can provide addressiblity
      for the named network with the specified ports.

  Bindable:
    description: >-
      A node type that includes the Bindable capability indicates that
      it can be bound to a logical network association via a network
      port.
    derived_from: Node

  Linkable:
    description: >-
      A node type that includes the Linkable capability indicates that
      it can be pointed to by a LinksTo relationship type.
    derived_from: Node

interface_types:
  Lifecycle.Standard:
    description: >-
      The Standard lifecycle interface defines the essential normative
      operations that TOSCA nodes may support.
    operations:
      create:
        description: Standard lifecycle create operation.
      configure:
        description: Standard lifecycle configure operation.
      start:
        description: Standard lifecycle start operation.
      modify:
        description: Standard lifecycle modify operation.
      stop:
        description: Standard lifecycle stop operation.
      delete:
        description: Standard lifecycle delete operation.

  Relationship.Configure:
    description: >-
      The Configure lifecycle interface defines the essential
      normative operations that TOSCA relationships may support.
    operations:
      pre_configure_source:
        description: >-
          Operation to pre-configure the source endpoint.
      pre_configure_target:
        description: >-
          Operation to pre-configure the target endpoint.
      post_configure_source:
        description: >-
          Operation to post-configure the source endpoint.
      post_configure_target:
        description: >-
          Operation to post-configure the target endpoint.
      add_target:
        description: >-
          Operation to notify the source node of a target node being
          added via a relationship.
      add_source:
        description: >-
          Operation to notify the target node of a source node which
          is now available via a relationship.
      target_changed:
        description: >-
          Operation to notify the source node that some property or
          attribute of the target node changed.
      remove_target:
        description: >-
          Operation to remove a target node.

relationship_types:
  Root:
    description: >
      The TOSCA base relationship type from which all other normative
      TOSCA relationship types derive.
    interfaces:
      Configure:
        type: Relationship.Configure

  DependsOn:
    description: >-
      The DependsOn type represents a general dependency relationship
      between two nodes.
    derived_from: Root
    valid_capability_types: [ Node ]

  HostedOn:
    description: >-
      The HostedOn type represents a hosting relationship between two
      nodes.
    derived_from: Root
    valid_capability_types: [ Container ]

  ConnectsTo:
    description: >-
      The ConnectsTo type represents a network connection relationship
      between two nodes.
    derived_from: Root
    valid_capability_types: [ Endpoint ]
    properties:
      credential:
        description: >-
          The security credential to present to the target endpoint
          for either authentication or authorization purposes.
        type: Credential
        required: false

  AttachesTo:
    description: >-
      The AttachesTo type represents an attachment relationship
      between two nodes (e.g. for attaching a storage node to a
      Compute node).
    derived_from: Root
    valid_capability_types: [ Attachment ]
    properties:
      location:
        description: >-
          The relative location (e.g., mount point on the file system)
          that provides the root location to address the attached node.
        type: string
        constraints:
          - min_length: 1
      device:
        description: >-
          The logical device name for the attached device.
        type: string
        required: false

  LinksTo:
    description: >-
      The LinksTo type represents an association relationship between
      Port and Network node types.
    derived_from: DependsOn
    valid_capability_types: [ Linkable ]

  BindsTo:
    description: >-
      The BindsTo type represents an association relationship between
      Port and Compute node types.
    derived_from: DependsOn
    valid_capability_types: [ Bindable ]

  RoutesTo:
    description: >-
      The RoutesTo type represents an intentional network routing
      between two Endpoints in different networks.
    derived_from: ConnectsTo
    valid_capability_types: [ Endpoint ]

node_types:
  Root:
    description: >
      The TOSCA base node type from which all other TOSCA normative
      node types derive.
    attributes:
      state:
        type: string
    capabilities:
      feature:
        type: Node
    requirements:
      - dependency:
          capability: Node
          node: Root
          relationship: DependsOn
          count_range: [ 0, UNBOUNDED ]
    interfaces:
      Standard:
        type: Lifecycle.Standard

  Abstract.Compute:
    description: >-
      The TOSCA Abstract.Compute node represents an abstract compute
      resource without any requirements on storage or network
      resources.
    derived_from: Root
    capabilities:
      host:
        type: Compute
        valid_source_node_types: []

  Compute:
    description: >
      The TOSCA Compute node represents one or more processors of
      software applications or services along with other essential
      local resources.  Collectively, the resources represented by a
      compute node can logically be viewed as a (real or virtual)
      “server”.
    derived_from: Abstract.Compute
    attributes:
      private_address:
        description: >
          The primary private IP address assigned by the cloud
          provider that applications may use to access the Compute
          node.
        type: string
      public_address:
        description: >
          The primary public IP address assigned by the cloud provider
          that applications may use to access the Compute node.
        type: string
      networks:
        description: >-
          The list of logical networks assigned to the compute host
          instance and information about them.
        type: map
        entry_schema:
          type: NetworkInfo
      ports:
        description: >-
          The list of logical ports assigned to the compute host
          instance and information about them.
        type: map
        entry_schema:
          type: PortInfo
    requirements:
      - local_storage:
          capability: Attachment
          node: Storage.BlockStorage
          relationship: AttachesTo
          count_range: [0, UNBOUNDED]
    capabilities:
      host:
        type: Compute
        valid_source_node_types: [SoftwareComponent]
      endpoint:
        type: Endpoint.Admin
      os:
        type: OperatingSystem
      scalable:
        type: Scalable
      binding:
        type: Bindable

  SoftwareComponent:
    description: >
      The TOSCA SoftwareComponent node represents a generic software
      component that can be managed and run by a TOSCA compute node.
    derived_from: Root
    properties:
      component_version:
        description: >
          Domain-specific software component version.
        type: version
        required: false
      admin_credential:
        description: >-
          The optional credential that can be used to authenticate to the software component.
        type: Credential
        required: false
    requirements:
      - host:
          capability: Compute
          node: Compute
          relationship: HostedOn
          count_range: [ 0, 1 ]

  WebServer:
    description: >-
      The TOSCA WebServer Node Type represents an abstract software
      component or service that is capable of hosting and providing
      management operations for one or more WebApplication nodes.
    derived_from: SoftwareComponent
    capabilities:
      data_endpoint:
        description: Private layer 4 endpoints.
        type: Endpoint
      admin_endpoint: Endpoint.Admin
      host:
        type: Compute
        valid_source_node_types: [ WebApplication ]

  WebApplication:
    description: >-
      The TOSCA WebApplication node represents a software application
      that can be managed and run by a TOSCA WebServer node.  Specific
      types of web applications such as Java, etc. could be derived
      from this type.
    derived_from: Root
    properties:
      context_root:
        description: >-
          The web application’s context root which designates the
          application’s URL path within the web server on which it is
          hosted.
        type: string
        required: false
    capabilities:
      app_endpoint: Endpoint
    requirements:
      - host:
          capability: Compute
          node: WebServer
          relationship: HostedOn

  DBMS:
    description: >
      The TOSCA DBMS node represents a typical relational SQL Database
      Management System software component or service.
    derived_from: SoftwareComponent
    properties:
      root_password:
        type: string
        required: false
        description: >
          the root password for the DBMS service.
      port:
        type: integer
        required: false
        description: >
          The port on which the DBMS service will listen for data and
          requests.
    capabilities:
      host:
        type: Compute
        valid_source_node_types: [ Database ]

  Database:
    description: >
      The TOSCA Database node represents a logical database that can
      be managed and hosted by a TOSCA DBMS node.
    derived_from: Root
    properties:
      name:
        type: string
        description: >
          The logical name of the database.
      port:
        type: integer
        description: >
          The port on which the underlying database service will listen for data.
      user:
        type: string
        description: >
          The user account name for DB administration.
        required: false
      password:
        type: string
        description: >
          The password for the DB user account.
        required: false
    requirements:
      - host:
          capability: Compute
          node: DBMS
          relationship: HostedOn
    capabilities:
      database_endpoint:
        type: Endpoint.Database

  Abstract.Storage:
    description: >-
      The TOSCA Abstract.Storage node represents an abstract storage
      resource without any requirements on compute or network
      resources.
    derived_from: Root
    properties:
      size:
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 0 MB

  Storage.ObjectStorage:
    description: >
      The TOSCA ObjectStorage node represents storage that provides the ability
      to store data as objects (or BLOBs of data) without consideration for the
      underlying filesystem or devices.
    derived_from: Abstract.Storage
    properties:
      name:
        description: >
          The logical name of the object store (or container).
        type: string
      maxsize:
        description: >
          The requested maximum storage size.
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 0 GB
    capabilities:
      storage_endpoint:
        type: Endpoint

  Storage.BlockStorage:
    description: >
      The TOSCA BlockStorage node represents a server-local block
      storage device (i.e., not shared) offering evenly sized blocks
      of data from which raw storage volumes can be created.
    derived_from: Abstract.Storage
    properties:
      size:
        description: >-
          The requested storage size. Required when an existing
          volume_id is not provided. If volume_id is provided, size is
          ignored.
        type: scalar-unit.size
        constraints:
          - greater_or_equal: 1 MB
      volume_id:
        description: >-
          ID of an existing volume (that is in the accessible scope of
          the requesting application).
        type: string
        required: false
      snapshot_id:
        description: >-
          Some identifier that represents an existing snapshot that
          should be used when creating the block storage (volume).
        type: string
        required: false
    capabilities:
      attachment:
        type: Attachment

  Container.Runtime:
    description: >
      The TOSCA Container Runtime node represents operating
      system-level virtualization technology used to run multiple
      application services on a single Compute host.
    derived_from: SoftwareComponent
    capabilities:
      host:
        type: Compute
      scalable:
        type: Scalable

  Container.Application:
    description: >
      The TOSCA Container Application node represents an application
      that requires Container-level virtualization technology.
    derived_from: Root
    requirements:
      - host:
          capability: Compute
          node: Container.Runtime
          relationship: HostedOn

  Network:
    description: >
      The TOSCA Network node represents a simple, logical network
      service.
    derived_from: Root
    properties:
      ip_version:
        description: >
          The IP version of the requested  Valid values are 4 for ipv4
          or 6 for ipv6.
        type: integer
        required: false
        default: 4
        constraints:
          - valid_values: [ 4, 6 ]
      cidr:
        description: >
          The cidr block of the requested
        type: string
        required: false
      start_ip:
        description: >
          The IP address to be used as the start of a pool of addresses within
          the full IP range derived from the cidr block.
        type: string
        required: false
      end_ip:
        description: >
          The IP address to be used as the end of a pool of addresses within
          the full IP range derived from the cidr block.
        type: string
        required: false
      gateway_ip:
        description: >
          The gateway IP address.
        type: string
        required: false
      network_name:
        description: >
          An identifier that represents an existing Network instance
          in the underlying cloud infrastructure or can be used as the
          name of the newly created network. If network_name is
          provided and no other properties are provided (with
          exception of network_id), then an existing network instance
          will be used. If network_name is provided alongside with
          more properties then a new network with this name will be
          created.
        type: string
        required: false
      network_id:
        description: >
          An identifier that represents an existing Network instance
          in the underlying cloud infrastructure. This property is
          mutually exclusive with all other properties except
          network_name. This can be used alone or together with
          network_name to identify an existing network.
        type: string
        required: false
      segmentation_id:
        description: >
          A segmentation identifier in the underlying cloud
          infrastructure.  E.g. VLAN ID, GRE tunnel ID, etc..
        type: string
        required: false
      network_type:
        description: >
          Specifies the nature of the physical network in the underlying
          cloud infrastructure. Examples are flat, vlan, gre or vxlan.
          For flat and vlan types, physical_network should be provided too.
        type: string
        required: false
      physical_network:
        description: >
          Identifies the physical network on top of which the network is
          implemented, e.g. physnet1. This property is required if network_type
          is flat or vlan.
        type: string
        required: false
      dhcp_enabled:
        description: >
          Indicates whether DHCP service should be enabled on the network or not.
        type: boolean
        default: false
    capabilities:
      link:
        type: Linkable

  Port:
    description: >
      The TOSCA Port node represents a logical entity that associates
      between Compute and Network normative types. The Port node type
      effectively represents a single virtual NIC on the Compute node
      instance.
    derived_from: Root
    properties:
      ip_address:
        type: string
        required: false
        description: >
          Allows the user to set a static IP.
      order:
        description: >
          The order of the NIC on the compute instance (e.g. eth2).
        type: integer
        required: true
        default: 0
        constraints:
          - greater_or_equal: 0
      is_default:
        description: >
          If is_default=true this port will be used for the default gateway
          route. Only one port that is associated to single compute node can
          set as is_default=true.
        type: boolean
        required: false
        default: false
      ip_range_start:
        description: >
          Defines the starting IP of a range to be allocated for the compute
          instances that are associated with this Port.
        type: string
        required: false
      ip_range_end:
        description: >
          Defines the ending IP of a range to be allocated for the compute
          instances that are associated with this Port.
        type: string
        required: false
    requirements:
      - link:
          description: >
            Expresses the relationship between Port and Network
            nodes. It indicates the network to which this port will connect.
          capability: Linkable
          relationship: LinksTo
      - binding:
          description: >
            Expresses the relationship between Port and
            Compute nodes. Effectively it indicates that the Port will be
            attached to a specific Compute node instance.
          capability: Bindable
          relationship: BindsTo

  LoadBalancer:
    description: >
      The TOSCA Load Balancer node represents logical function that
      can be used in conjunction with a Floating Address to distribute
      an application’s traffic (load) across a number of instances of
      the application (e.g., for a clustered or scaled application).
    derived_from: Root
    properties:
      algorithm:
        type: string
        required: false
        status: experimental
    capabilities:
      client:
        type: Endpoint.Public
        description: >
          The floating IP to which clients on the public network can connect.
    requirements:
      - application:
          capability: Endpoint
          relationship: RoutesTo
          count_range: [0, UNBOUNDED]
          description: >
            Connection to one or more load balanced applications.

group_types:
  Root:
    description: >
      The TOSCA base group type from which all other normative
      TOSCA group types derive.
    members: [ Root ]

policy_types:
  Placement:
    description: >-
      The TOSCA Policy Type definition that is used to govern
      placement of TOSCA nodes or groups of nodes.

  Scaling:
    description: >-
      The TOSCA Policy Type definition that is used to govern scaling
      of TOSCA nodes or groups of nodes.

  Update:
    description: >-
      The TOSCA Policy Type definition that is used to govern update
      of TOSCA nodes or groups of nodes.

  Performance:
    description: >-
      The TOSCA Policy Type definition that is used to declare
      performance requirements for TOSCA nodes or groups of nodes.
